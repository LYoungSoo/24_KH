<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
	Mapper 인터페이스와 연결하는 방법 : 
	namespace 속성 값으로 Mapper 인터페이스의 패키지명 + 인터페이스명 작성
-->
<mapper namespace="edu.kh.project.chatting.mapper.ChattingMapper">


	<!-- 채팅 상대 검색(본인 제외) -->
	<select id="selectTarget" resultType="Member">
		SELECT	MEMBER_NO,
				MEMBER_EMAIL,
				MEMBER_NICKNAME,
				PROFILE_IMG
		FROM	"MEMBER"
		WHERE	(MEMBER_EMAIL LIKE '%' || #{query} || '%'
				 OR
				 MEMBER_NICKNAME LIKE '%' || #{query} || '%')
		AND		MEMBER_DEL_FL = 'N'
		AND		MEMBER_NO != #{memberNo}
	</select>
	
	
	<!-- 두 회원이 참여한 채팅방이 존재하는지 확인 -->
	<select id="checkChattingRoom" resultType="_int">
		SELECT	NVL(SUM(CHATTING_ROOM_NO),0) CHATTING_NO 
		FROM	CHATTING_ROOM
		WHERE	(OPEN_MEMBER = #{memberNo}
				 AND PARTICIPANT = #{targetNo})
		OR		(OPEN_MEMBER = #{targetNo}
				 AND PARTICIPANT = #{memberNo})
	</select>
	
	
	<!-- 채팅방 테이블 삽입 -->
	<insert id="createChattingRoom" parameterType="map" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="chattingNo">
			SELECT	SEQ_ROOM_NO.NEXTVAL
			FROM	DUAL
		</selectKey>	<!-- keyProperty에 등록된 chattingNo = ~.NEXTVAL 이 된다! -->
	
		INSERT INTO	CHATTING_ROOM
		VALUES	(	#{chattingNo},
					DEFAULT,
					#{memberNo},
					#{targetNo}
		)
	</insert>
	
	
	<!-- 로그인한 회원이 참여한 채팅방 목록 조회 -->
	<select id="selectRoomList" resultType="ChattingRoom">
		SELECT	CHATTING_ROOM_NO
				,(SELECT	MESSAGE_CONTENT
					FROM	(
						SELECT	*
						FROM	MESSAGE M2
						WHERE	M2.CHATTING_ROOM_NO = R.CHATTING_ROOM_NO
						ORDER	BY MESSAGE_NO DESC) 
					WHERE	ROWNUM = 1) LAST_MESSAGE
		
				,TO_CHAR(
					NVL((SELECT		MAX(SEND_TIME) SEND_TIME 
							FROM	MESSAGE M
							WHERE	R.CHATTING_ROOM_NO  = M.CHATTING_ROOM_NO), 
						CREATE_DATE), 
						'YYYY.MM.DD') SEND_TIME
		
				,NVL2((SELECT	OPEN_MEMBER FROM CHATTING_ROOM R2
						WHERE	R2.CHATTING_ROOM_NO = R.CHATTING_ROOM_NO
						AND		R2.OPEN_MEMBER = #{memberNo}),
					R.PARTICIPANT,
					R.OPEN_MEMBER) TARGET_NO	
		
				,NVL2((SELECT	OPEN_MEMBER
						FROM	CHATTING_ROOM R2
						WHERE	R2.CHATTING_ROOM_NO = R.CHATTING_ROOM_NO
						AND		R2.OPEN_MEMBER = #{memberNo}),
					(SELECT		MEMBER_NICKNAME
						FROM 	MEMBER
						WHERE	MEMBER_NO = R.PARTICIPANT),
					(SELECT		MEMBER_NICKNAME
						FROM	MEMBER
						WHERE	MEMBER_NO = R.OPEN_MEMBER)
					) TARGET_NICKNAME
		
				,NVL2((SELECT OPEN_MEMBER
						FROM	CHATTING_ROOM R2
						WHERE	R2.CHATTING_ROOM_NO = R.CHATTING_ROOM_NO
						AND		R2.OPEN_MEMBER = #{memberNo}),
					(SELECT		PROFILE_IMG
						FROM	MEMBER 
						WHERE	MEMBER_NO = R.PARTICIPANT),
					(SELECT		PROFILE_IMG
						FROM	MEMBER 
						WHERE	MEMBER_NO = R.OPEN_MEMBER)
					) TARGET_PROFILE
		
				,(SELECT	COUNT(*)
					FROM	MESSAGE M
					WHERE	M.CHATTING_ROOM_NO = R.CHATTING_ROOM_NO
					AND		READ_FL = 'N'
					AND 	SENDER_NO != #{memberNo}) NOT_READ_COUNT
		
				,(SELECT	MAX(MESSAGE_NO) SEND_TIME
					FROM	MESSAGE M
					WHERE	R.CHATTING_ROOM_NO  = M.CHATTING_ROOM_NO
				) MAX_MESSAGE_NO
		
		FROM	CHATTING_ROOM R
		
		WHERE	OPEN_MEMBER = #{memberNo}
				OR PARTICIPANT = #{memberNo}
		
		ORDER	BY MAX_MESSAGE_NO DESC NULLS LAST
	</select>
	
	
	<!-- 특정 채팅방의 메시지 모두 조회 -->
	<select id="selectMessage" resultType="Message">
		SELECT	MESSAGE_NO,
				MESSAGE_CONTENT,
				READ_FL,
				SENDER_NO,
				CHATTING_ROOM_NO,
				TO_CHAR(SEND_TIME, 'YYYY.MM.DD HH24:MI') SEND_TIME 
		FROM	MESSAGE
		WHERE	CHATTING_ROOM_NO  = #{chattingNo}
		ORDER	BY MESSAGE_NO
	</select>
	
	
	<!-- 특정 채팅방의 글 중 내가 보내지 않은 글을 읽음 처리 -->
	<!-- 채팅 메세지 중 내가 보내지 않은 글을 읽음으로 표시 -->
	<update id="updateReadFlag">
		UPDATE	"MESSAGE"
		SET		READ_FL	= 'Y'
		WHERE	CHATTING_ROOM_NO = #{chattingNo}
		AND		SENDER_NO != #{memberNo}
	</update>
	
	
	<!-- 메시지 삽입 -->
	<insert id="insertMessage">
		INSERT INTO	"MESSAGE"
		VALUES (	SEQ_MESSAGE_NO.NEXTVAL,
					#{messageContent},
					DEFAULT,
					DEFAULT,
					#{senderNo},
					#{chattingRoomNo}	
		)
	</insert>
		
	
</mapper>
