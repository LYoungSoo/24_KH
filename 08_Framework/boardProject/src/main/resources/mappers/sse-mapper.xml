<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
	Mapper 인터페이스와 연결하는 방법 : 
	namespace 속성 값으로 Mapper 인터페이스의 패키지명 + 인터페이스명 작성
-->
<mapper namespace="edu.kh.project.sse.mapper.SseMapper">

	<!--
		useGeneratedKeys="true"
		- SQL에서 생성된 key 값(시퀀스)을 자바에서도 사용할 수 있게 하는 속성
		- 원리 : 전달 받은 파라미터(얕은 복사로 인해 주소만 복사됨)
				 생성된 key 값을 세팅해서 java에서도 사용 가능하게 함)
	-->
	
	
	<!-- 알림 삽입 후 알림 받을 회원 번호 + 알림 개수 반환 -->
	<insert id="insertNotification" parameterType="Notification" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="notificationNo">
			SELECT SEQ_NOTI_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO	"NOTIFICATION" (
				NOTIFICATION_NO,
				NOTIFICATION_CONTENT,
				NOTIFICATION_URL,
				SEND_MEMBER_NO,
				RECEIVE_MEMBER_NO
		)
		VALUES(
				#{notificationNo},
				#{notificationContent},
				#{notificationUrl},
				#{sendMemberNo},
				
				<choose>
					<!-- 알림 종류가 댓글 작성 또는 좋아요 ==> 게시글 작성자 -->
					<when test="notificationType == 'insertComment'
								or notificationType == 'boardLike'">
						(	SELECT	MEMBER_NO
							FROM	"BOARD"
							WHERE	BOARD_NO = #{pkNo})
					</when>
					
					<!-- 알림 종류가 답글인 경우 -->
					<when test="notificationType == 'insertChildComment'">
						(	SELECT	MEMBER_NO
							FROM	"COMMENT"
							WHERE	COMMENT_NO = #{pkNo})
					</when>
				</choose>
		)
		
	</insert>
	<!--
		좋아요 ==> 게시글 작성자 번호
		댓글   ==> 게시글 작성자 번호
		대댓글 ==> 댓글   작성자 번호
	-->
	
	
	<!-- 알림을 받아야 하는 회원의 번호 + 안읽은 알림 개수 조회 -->
	<!-- 반환형이 DTO가 아닌 map 이기 때문에 컬럼명이 Key 가 되기 때문에 카멜표기법 쓸거면 이름바꿔줘야 -->
	<select id="selectReceiveMember" resultType="map">
		SELECT	RECEIVE_MEMBER_NO "receiveMemberNo",
				(	SELECT COUNT(*) 
					FROM "NOTIFICATION" SUB
					WHERE SUB.RECEIVE_MEMBER_NO = MAIN.RECEIVE_MEMBER_NO 
					AND SUB.NOTIFICATION_CHECK = 'N') "notiCount"
		FROM	(	SELECT RECEIVE_MEMBER_NO
					FROM "NOTIFICATION"
					WHERE NOTIFICATION_NO =  #{notificationNo}) MAIN
	</select>
	
	
	<!-- 로그인한 회원의 알림 목록 조회 -->
	<select id="selectNotificationList"  resultType="Notification">
		SELECT 
				NOTIFICATION_NO, 
				NOTIFICATION_CONTENT, 
				NOTIFICATION_URL, 
				PROFILE_IMG AS SEND_MEMBER_PROFILE_IMG, 
				SEND_MEMBER_NO, 
				RECEIVE_MEMBER_NO,
				NOTIFICATION_CHECK,
				CASE 
					WHEN TRUNC(NOTIFICATION_DATE) = TRUNC(CURRENT_DATE) THEN TO_CHAR(NOTIFICATION_DATE, 'AM HH:MI')
					ELSE TO_CHAR(NOTIFICATION_DATE, 'YYYY-MM-DD')
				END AS NOTIFICATION_DATE
		FROM	"NOTIFICATION"
		JOIN	"MEMBER" ON (SEND_MEMBER_NO = MEMBER_NO)
		WHERE	RECEIVE_MEMBER_NO = #{memberNo}
		ORDER BY NOTIFICATION_NO DESC
	</select>
	
	
	<!-- 현재 로그인한 회원의 알림 중 읽지 않은 알림 개수 조회 -->
	<!-- ("NOTIFICATION".NOTIFICATION_CHECK = 'N') -->
	<select id="notReadCheck"  resultType="_int">
		SELECT	COUNT(*)
		FROM	"NOTIFICATION"
		WHERE	RECEIVE_MEMBER_NO = #{memberNo}
		AND		NOTIFICATION_CHECK ='N'
	</select>
	
	
	<!-- 알림 삭제 -->
	<delete id="deleteNotification">
		DELETE
		FROM	"NOTIFICATION"
		WHERE	NOTIFICATION_NO = #{notificationNo}
	</delete>
	
	
	<!-- 알림 읽음 여부 변경(N ==> Y) -->
	<update id="updateNotification">
		UPDATE	"NOTIFICATION"
		SET		NOTIFICATION_CHECK = 'Y'
		WHERE	NOTIFICATION_NO = #{notificationNo}
	</update>

</mapper>
