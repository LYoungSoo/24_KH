<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- <mapper namespace="연결할 Mapper 인터페이스 파일 경로 작성 (필수)"> -->
<mapper namespace="edu.kh.demo.mapper.TestMapper">

	<!-- 아래 태그는 꼭 삭제!! -->
	<!--   <cache-ref namespace=""/> -->
	
	<!-- ==============================
		** <select> 태그에서 사용할 수 있는 속성 **
		
		- parameterType : 전달 받은 "값"의 자료형
		
		- resultType    : 조회된 결과 "행"의 자료형  
		
		(중요!)
		자료형 작성 시
		- 기본 자료형 : mybatis 제공 별칭으로 작성
		
		- 참조형(클래스 =사용자 정의) :
			mybatis 제공 별칭
				또는
			패키지명 + 클래스명
				또는
			사용자 지정 별칭
	============================== -->
	
	<!-- 사용자 이름 조회 -->
	<select id="selectUserName"
			parameterType="_int"
			resultType="string">
	<!-- resultType="java.lang.String" 의 별칭으로 string 을 사용. String이 아니라 소문자!!! -->
			
		SELECT USER_NAME
		FROM TB_USER
		WHERE USER_NO = #{userNo}	
	</select>
	
	<!-- 
		마이바티스는 조회된 컬럼명과
		결과를 담으려는 DTO 필드명이 같을 경우
		자동으로 값을 담아줄 수 있다!!!
		
		그런데... USER_NO, userNo 이렇게 형태가 달라서
		원래는 자동으로 담을 수 없지만...!!
		mybatis-config.xml에 작성된
		mapUnderScoreToCamelCase 때문에 가능해짐!!!
		==> 언더바 대소문자 공백문자 다 지워버리고 비교하게 해주는 구문인듯?
		
	 -->
	
	<!-- 사용자 전체 조회 -->
	<select id="selectAll"
			resultType="edu.kh.demo.dto.UserDto">
	
		SELECT USER_NO, USER_ID, USER_PW, USER_NAME,
			   TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일"') ENROLL_DATE
		FROM TB_USER
		ORDER BY USER_NO ASC
	</select>
	
	<!-- userNo가 일치하는 사용자 조회 -->
	<!-- resultType으로 별칭 사용(DBConfig 참고) -->
	<select id="selectUser"
			parameterType="_int"
			resultType="UserDto">
	<!--    resultType="edu.kh.demo.dto.UserDto" -->
		SELECT USER_NO, USER_ID, USER_PW, USER_NAME,
			   TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일"') ENROLL_DATE
		FROM TB_USER
		WHERE USER_NO = #{userNo}
	</select>
	
	<!-- ==============================
		** <insert>, <update>, <delete> 태그에서 사용할 수 있는 속성
		
		- parameterType : 전달 받은 "값"의 자료형
		
		* resultType 없음!!!
		==> 왜? 결과가 무조건 int 타입이니까!!
			(안적어도 암묵적으로 int)
	============================== -->
	
	<!-- 사용자 정보 수정 -->
	<!-- DBConfig에서 edu.kh.demo 아래 있는 클래스들은 클래스명이 별칭이 되게끔 설정을 하였기에 -->
	<!--
		- parameterType에 UserDto(별칭) 사용
	 	- 전달 받은 파라미터가 DTO 또는 Map인 경우
	 	  SQL에 필드명 또는 key 값을 작성하면 된다!!
	 	  ==> DTO 포장이 다 풀려서 필드값만 남는다! 
	 -->
	<update id="updateUser"
			parameterType="UserDto">
		UPDATE TB_USER
		SET USER_PW = #{userPw},
			USER_NAME = #{userName}
		WHERE
			USER_NO = #{userNo}
	</update>
	
	<!-- 사용자 삭제 -->
	<delete id="deleteUser" parameterType="_int">
		DELETE
		FROM TB_USER
		WHERE USER_NO = #{userNo}
	</delete>
	
	<!-- 사용자 추가 -->
	<insert id="insertUser"
			parameterType="UserDto">
		INSERT INTO TB_USER(USER_NO, USER_ID, USER_PW, USER_NAME, ENROLL_DATE)
		VALUES (SEQ_USER_NO.NEXTVAL, #{userId}, #{userPw}, #{userName}, DEFAULT)
	</insert>
	
</mapper>
