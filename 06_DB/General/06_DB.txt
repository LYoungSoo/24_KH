5: SELECT		-- 조회할 컬럼을 지정
1: FROM			-- 조회할 테이블
(+ JOIN) 		-- 같은 값과 자료형을 지닌 
2: WHERE 조건식	-- 조회하려는 행만 골라내기
3: GROUP BY		-- 같은 컬럼값을 지닌 행끼리 그룹화
4: HAVING 		-- 조건에 맞는 그룹만 조회
6: ORDER BY		-- 조회 결과 정렬 기준 작성

--------------------------------------------------

INSERT : 테이블에 행을 삽입하는 구문

INSERT INTO 테이블명
VALUES(모든 컬럼에 대입할 값 순서대로 작성)
;

INSERT INTO 테이블명 (컬럼1, 컬럼2, 컬럼3, ...)
VALUES(컬럼1값, 컬럼2값, 컬럼3값, ...)
;
--> 값이 삽입되지 않은 컬럼은 NULL

* 서브쿼리 결과를 지정된 테이블에 모두 삽입
INSERT INTO 테이블명 AS (서브쿼리)

--------------------------------------------------

UPDATE : 테이블에서 지정된 행의 컬럼 값을 수정하는 구문

UPDATE 테이블명
SET 컬럼명 = 수정할 값, 컬럼명 = 수정할 값, ...
WHERE 행을 지정하는 조건
;

--------------------------------------------------

DELETE : 테이블의 행을 삭제하는 구문

DELETE
FROM 테이블명
WHERE 행을 지정하는 조건

--------------------------------------------------

* DML(Data Manipulation Language) : 데이터 조작 언어
- SELECT, INSERT, UPDATE, DELETE, MERGE

----------DML----------
- INSERT   ---DQL---  -
- UPDATE   - SELECT-  -
- DELETE   ---------  -
-----------------------

* DML : 테이블에 값을 삽입, 수정, 삭제
* DQL : 테이블에 저장된 값을 조회

--------------------------------------------------

* TCL (Transaction Control Language) : 트랜잭션 제어 언어
- COMMIT	: 데이터 변경 사항(DML)을 DB에 반영

- ROLLBACK	: 데이터 변경 사항(DML)을 삭제
			==> 이전 마지막 COMMIT 상태로 돌아감

- SAVEPOINT	: 트랜잭션에 저장 지점 설정
			==> 원하는 지점 까지만 ROLLBACK 가능

--------------------------------------------------

* DDL (Data Definition Language) : 데이터 정의 언어
- 객체(Object)를

--------------------------------------------------

* DCL


[테이블 생성 구문]
CREATE TABLE 테이블명 (
	컬럼명 자료형 [컬럼 레벨 제약 조건],
	컬럼명 자료형 [[CONSTRAINT 제약조건명]] 제약 조건],
	...
	-- , [[CONSTRAINT 제약조건명]] 제약 조건 종류(대상 컬럼)]	
)
;

--------------------------------------------------

** ORACLE에서 사용하는 자료형 **
NUMBER			: 정수/실수
CHAR (크기)		: 고정 길이 문자열 최대 2000 BYTE
VARCHAR2 (크기)	: 가변 길이 문자열 최대 4000 BYTE
UPDATE			: 날짜 (년,월,일,요일,시,분,초)
TIMESTAMP		: 날짜 (년,월,일,요일,시,분,초,ms,UTC 시차)

BLOB			: 바이트 형태로 최대 4GB
CLOB			: 문자 형태로 최대 4GB

문자 인코딩 UTF-8 의 특징
- 영어, 숫자, 키보드 특수문자 : 1 BYTE
- 나머지 문자(언어), 특수문자	: 3 BYTE

--------------------------------------------------

*** 제약 조건 ***

- 조건에 맞는 데이터만 유지하기 위해 특정 컬럼에 설정하는 계약
	==> 데이터 무결성(신뢰도) 보장을 목적으로 함

1. NOT NULL		: 지정된 컬럼에 무조건 값이 존재해야 함

2. UNIQUE		: 지정된 컬럼에 중복된 값이 존재할 수 없다
				==> 단, NULL은 가능 ==> 값이 없어서 비교가 안됨

3. PRIMARY KEY	: 각 행을 구분하기 위한 식별 역할의 컬럼을 지정
				==> 컬럼에 저장된 값만 알면 모든 행을 구별할 수 있음
				==> 중복 X (UNIQUE) + 무조건 값이 존재(NOT NULL)
				==> PK는 테이블에 1개만 존재 가능
					(한 컬럼 X, PK 제약조건이 1개)

4. FOREIGN KEY	: 자식 테이블의 한 컬럼에 작성될 수 있는 값은 
				  부모 테이블의 한 컬럼(PK)에 작성된 값만 쓸 수 있다.
				==> 자식 테이블이 부모 테이블을 참조
				- 부모-자식 관계 형성
				==> 두 테이블에 같은 종류의 데이터를 지닌 컬럼이 있다!
				===> JOIN의 연결 기준이 될 수 있다!

	[삭제 옵션]
	1) ON DELETE SET NULL : 부모 행을 삭제하면, 참조하던 값을 
							가지고 있는 자식 행의 컬럼 값을 NULL로 변경(SET)

	2) ON DELETE CASCADE  : 부모 행을 삭제하면, 참조하던 값을 
							가지고 있는 자식 행을 삭제

5. CHECK		: 컬럼에 지정된 값만 저장할 수 있게 하는 제약조건
					- FK 제약 조건의 하위 호환

--------------------------------------------------

ALTER TABLE 
		컬럼(추가, 수정, 삭제)
		제약조건 (추가, 삭제)
		이름변경(컬럼명, 제약조건명, 테이블명)

DROP TABLE 테이블명
[CASCADE CONSTRAINTS];