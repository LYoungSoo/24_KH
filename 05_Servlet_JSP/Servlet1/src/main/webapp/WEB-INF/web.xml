<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd" id="WebApp_ID" version="6.0">
<!-- 태그를 쓰는 건 다 마크업 언어 -->
<!-- [web.xml 파일]
	- 배포 서술자(Deployment Descriptor)
	- 서버가 실행되어지고 인터넷에 올라가서
		클라이언트의 요청을 받을 수 있는 상태 == 배포
	
	- 서버 실행 시 적용할 설정 값을 작성하는 문서 == 배포 서술자
 -->
  <display-name>Servlet1</display-name>
  
  <!-- 해당 서버의 최상위 주소 요청 시 연결할 파일의 경로를 작성
  		ex) localhost:9090/ 요청 시 webapp/index.html 이 응답되어 클라이언트 브라우저에 보여짐
   -->
  <welcome-file-list>
  
	<!-- welcome-file 경로 작성 시 webapp 폴더를 기준으로 작성 -->
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>
  
  <!-- ExampleServlet1 클래스를 /ex1 요청을 처리하는 Servlet으로 등록하기 -->
  
  <!-- 1) Servlet 등록, name이 먼저고 class가 나중에 -->
  <servlet>
  	<!-- 등록된 Servlet을 부를 이름(변수명 또는 별칭 비슷) -->
  	<servlet-name>example1</servlet-name>
  	
  	<!-- Servlet으로 등록할 클래스의 패키지명 + 클래스명 -->
  	<servlet-class>edu.kh.servlet.controller.ExampleServlet1</servlet-class>
  </servlet>
  
  <!-- Servlet과 요청 주소 연결하기 -->
  <servlet-mapping>
  	<servlet-name>example1</servlet-name>
  	<url-pattern>/ex1</url-pattern>
  </servlet-mapping>
  
  
</web-app>