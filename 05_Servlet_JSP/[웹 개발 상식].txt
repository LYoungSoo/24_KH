[웹 개발 상식]

Server : 기능을 제공하는 컴퓨터

Client : 기능을 요청하고 이용하는 고객 컴퓨터

	요청(Request) ===> 
Client			    Server	
	<=== 응답(Response)
(요청에 맞는 화면을 Java에서 HTML을 만들어서  돌려보내줌)
----------------
HTTP : Hyper Text Transfer Protocol + Security (인증서)
- 서버-클라이언트 간의 HTML 요청-응답 전송(전달) 규약
	(인터넷에서 HTML을 주고받을 떄의 약속)

IP (Internet Protocol) : 인터넷/네트워크를 통해 데이터를 송수신하는 규약
	==> 인터넷/네트워크에 연결된 각종 통신 기기를 구분하는 주소
		(컴퓨터, 휴대폰, 교통수단, 사물인터넷 모조리 등등)

IPv6 주소 . . . . : fe80::fa4b:f24f:c38e:7f49%5
IPv4 주소 . . . . . . . . . : 192.168.10.37

Port 번호 : 컴퓨터 내 프로그램을 구분하는 식별 번호

IP + Port 번호를 알아야 다른 컴퓨터(서버)에 요청을 할 수 있다

ex) http://192.168.10.5:8080




tomcat - bin 폴더에서 cmd 실행하고 startup.bat

127.0.0.1:8080
현재 컴퓨터:포트
LocalHost






preference - general - Show heap status(check) ***APPLY
general - workspace - Refresh using native hooks...(check) ***APPLY
font 검색 - general - appearance - colors and fonts - basic - textfont 


HTTP 포트 번호 중 80번
- http:// 요청 시 80번 포트는 생략 가능!
(참고: https는 443번 생략 가능)

ex) http://localhost:80


Servlet
Thread 1개당 1대1로 ==> 접속자들이 동시에 일할수 있도록 ==> 제한 가능하며, 최대 갯수는 성능에 따라


WAS (Wevb Application Server) ==> Tomcat을 사용중임

1. 요청 (Http Request) (주소)
2. HttpServletRequest / HttpServletResponse 객체 생성 (자바 오버라이딩으로 자동완성한 doGet에 매개변수로 사용했었음)
3. 해당 요청 주소를 처리하기로 한 Servlet Class 찾기(web.xml (@WebServlet 어노테이션을 대신 사용하였음))
4. init() (Initionlize (초기화))
5. service() / - doGet() / - doPost()
6. 응답 (Http Response)


JSP
Java 파일에 HTML 코드 작성 힘듦 ==> 기본 작성법이 Java
그러면 기본 작성법을 HTML로 변경하면 HTML 코드 작성이 쉬워짐!! + 자바도 작성 가능해야 된다!
그러니까 HTML에 Java를 섞은거. HTML 작성법을 따르며 Java 기능 구현이 되는
이걸 10분 남짓 설명하시면 학부생들은 못알아먹어요 교수님
코딩노다가를 하고 이론시험보니 미치고 팔짝뛰고
