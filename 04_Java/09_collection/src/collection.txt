컬렉션(Collection)

* 추가, 삭제, 정렬 등의 기능처리가 간단하게 해결되어 자료구조적 알고리즘을 구현할 필요 없음
* 하위 3개는 컬렉션의 주요 '인터페이스'

    목록(List) - add()
    - 집합과 비슷함
    - 인덱스(0 ~ ...) 가 존재

    집합(Set) - add()
    - 인덱스가 존재하지 않음
    - 순서를 구분하지 않는 주머니에 값이 저장됨
    - 중복된 값을 허용하지 않음 ==> 중복안됨(null도 중복안됨), 중복검사가 필요가 없음

    Map(지도) - put()
    - {Key : Value , Key : Value, ...} ==> 키와 값의 쌍으로 저장
    - 키는 중복될수 없음


    기억났다 이 악마들
    내 주말이 뒤졌다
    검녹색 책에 그림이 나쁘지않게 정리되어있었음
    아이고아이고아이고

====================================================================================================

제네릭스(Generics)

컬렉션의 여러 타입의 데이터가 저장 가능한 특징이 배열의 한 인덱스를 참조할 때 마다
해당 자료형의 기능을 온전히 사용하기 위해 업캐스팅된 자료형을 다운캐스팅하여야 하고
다운캐스팅을 위해 instanceof를 사용하여 타입검사를 매번 해주어야 함
따라서 자료형을 하나로 묶어서 관리하기 위한것이 제네릭스

* List<String> list = new ArrayList<String> ==> list에 모든 자료형이 String으로 타입 제한이 생김
HashMap = 신버전 (그래도 오래됨)
HashTable = 구버전
TreeMap = Key값 오름차순이 됨

